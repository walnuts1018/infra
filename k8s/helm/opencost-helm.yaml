---
# Source: opencost/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opencost
  namespace: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: opencost/templates/configmap-custom-pricing.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-pricing-model
  namespace: opencost
data:
  default.json: |-
    {
      "CPU": "1.25",
      "GPU": "0.95",
      "RAM": "0.5",
      "description": "Modified pricing configuration.",
      "internetNetworkEgress": "0.12",
      "regionNetworkEgress": "0.01",
      "spotCPU": "0.006655",
      "spotRAM": "0.000892",
      "storage": "0.25",
      "zoneNetworkEgress": "0.01",
      "provider" : "custom"
    }
---
# Source: opencost/templates/clusterrole.yaml
# Cluster role giving opencost to get, list, watch required resources
# No write permissions are required
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources:
      - configmaps
      - deployments
      - nodes
      - nodes/proxy
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - daemonsets
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
---
# Source: opencost/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opencost
subjects:
  - kind: ServiceAccount
    name: opencost
    namespace: opencost
---
# Source: opencost/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opencost
  namespace: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
  type: "ClusterIP"
  ports:
    - name: http
      port: 9003
      targetPort: 9003
    - name: mcp-server
      port: 8081
      targetPort: 8081
---
# Source: opencost/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opencost
  namespace: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/configs: c698a327d8da2b10c97b44e6bf7d7ece7f0df7a602125e82f20291a510db4821
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opencost
      app.kubernetes.io/instance: opencost
  strategy: 
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opencost
        app.kubernetes.io/instance: opencost
      annotations:
        instrumentation.opentelemetry.io/inject-go: opentelemetry-collector/default
        instrumentation.opentelemetry.io/otel-go-auto-target-exe: /go/bin/app
    spec:
      serviceAccountName: opencost
      automountServiceAccountToken: true
      initContainers:
      containers:
        - name: opencost
          image: ghcr.io/opencost/opencost:1.118.0@sha256:c1a08767fe3c3b2964a75885c145bae0cba32225c0b4c1e0382a77566aef93e9
          imagePullPolicy: IfNotPresent
          args:
          ports:
            - containerPort: 9003
              name: http
            - containerPort: 8081
              name: mcp-server
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 55Mi
          startupProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 20
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: LOG_LEVEL
              value: info
            - name: CUSTOM_COST_ENABLED
              value: "false"
            - name: INSTALL_NAMESPACE
              value: opencost
            - name: PROMETHEUS_QUERY_RESOLUTION_SECONDS
              value: "300"
            - name: API_PORT
              value: "9003"
            - name: PROMETHEUS_SERVER_ENDPOINT
              value: "http://prometheus-operated.monitoring.svc.cluster.local:9090"
            - name: INSECURE_SKIP_VERIFY
              value: "false"
            - name: CLUSTER_ID
              value: "default-cluster"
            - name: CONFIG_PATH
              value: "/tmp/custom-config"
            - name: RESOLUTION_1D_RETENTION
              value: "15"
            - name: RESOLUTION_1H_RETENTION
              value: "49"
            - name: CLOUD_COST_ENABLED
              value: "false"
            - name: CLOUD_COST_MONTH_TO_DATE_INTERVAL
              value: "6"
            - name: CLOUD_COST_REFRESH_RATE_HOURS
              value: "6"
            - name: CLOUD_COST_QUERY_WINDOW_DAYS
              value: "7"
            - name: CLOUD_COST_RUN_WINDOW_DAYS
              value: "3"
            # Add any additional provided variables
            # MCP Server Configuration
            - name: MCP_SERVER_ENABLED
              value: "true"
            - name: MCP_HTTP_PORT
              value: "8081"
          volumeMounts:
            - mountPath: /tmp/custom-config/default.json
              name: custom-configs
              subPath: default.json
              readOnly: true
      volumes:
        - name: custom-configs
          configMap:
            name: custom-pricing-model
---
# Source: opencost/templates/ingress.yaml
---
---
# Source: opencost/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: opencost
  labels:
    helm.sh/chart: opencost-2.4.0
    app.kubernetes.io/name: opencost
    app.kubernetes.io/instance: opencost
    app.kubernetes.io/version: "1.118.0"
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
    - port: http
      scheme: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
  selector:
    matchLabels:
      app.kubernetes.io/name: opencost
      app.kubernetes.io/instance: opencost
  namespaceSelector:
    matchNames:
      - opencost
