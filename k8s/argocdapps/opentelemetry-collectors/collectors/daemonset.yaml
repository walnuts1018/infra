apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
    name: k8s-daemonset
spec:
    config:
        exporters:
            otlp/default:
                endpoint: default-collector.opentelemetry-collector.svc.cluster.local:4317
                tls:
                    insecure: true
        processors:
            batch:
                send_batch_size: 10000
                timeout: 10s
            k8sattributes:
                auth_type: serviceAccount
                extract:
                    metadata:
                        - k8s.namespace.name
                        - k8s.pod.name
                        - k8s.pod.start_time
                        - k8s.pod.uid
                        - k8s.deployment.name
                        - k8s.deployment.uid
                        - k8s.node.name
                        - k8s.cluster.uid
                        - k8s.cronjob.name
                        - k8s.job.name
                        - k8s.daemonset.name
                        - k8s.daemonset.uid
                        - k8s.statefulset.name
                        - k8s.statefulset.uid
                        - container.id
                filter:
                    node_from_env_var: K8S_NODE_NAME
                pod_association:
                    - sources:
                        - from: resource_attribute
                          name: k8s.pod.ip
                    - sources:
                        - from: resource_attribute
                          name: k8s.pod.uid
                    - sources:
                        - from: connection
            memory_limiter:
                check_interval: 1s
                limit_mib: 2000
                spike_limit_percentage: 15
            resourcedetection:
                detectors:
                    - env
                override: false
                timeout: 15s
        receivers:
            filelog:
                include:
                    - /var/log/pods/*/*/*.log
                include_file_path: true
                operators:
                    - id: container-parser
                      type: container
            hostmetrics:
                collection_interval: 10s
                scrapers:
                    cpu:
                        metrics:
                            system.cpu.logical.count:
                                enabled: true
                    disk: null
                    filesystem: null
                    load: null
                    memory:
                        metrics:
                            system.linux.memory.available:
                                enabled: true
                            system.memory.limit:
                                enabled: true
                    network: null
            kubeletstats:
                auth_type: serviceAccount
                collection_interval: 10s
                endpoint: ${env:K8S_NODE_IP}:10250
                extra_metadata_labels:
                    - k8s.volume.type
                insecure_skip_verify: true
                k8s_api_config:
                    auth_type: serviceAccount
                metric_groups:
                    - node
                    - pod
                    - container
                    - volume
        service:
            pipelines:
                logs:
                    exporters:
                        - otlp/default
                    processors:
                        - memory_limiter
                        - batch
                        - k8sattributes
                    receivers:
                        - filelog
                metrics:
                    exporters:
                        - otlp/default
                    processors:
                        - memory_limiter
                        - batch
                        - k8sattributes
                        - resourcedetection
                    receivers:
                        - hostmetrics
                        - kubeletstats
    env:
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
                fieldPath: status.hostIP
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
                fieldPath: spec.nodeName
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.node.name=$(K8S_NODE_NAME),k8s.node.ip=$(K8S_NODE_IP)
    image: otel/opentelemetry-collector-k8s
    mode: daemonset
    securityContext:
        runAsGroup: 0
        runAsUser: 0
    serviceAccount: opentelemetry-collectors
    tolerations:
        - operator: Exists
    volumeMounts:
        - mountPath: /var/log/pods
          name: varlogpods
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
    volumes:
        - hostPath:
            path: /var/log/pods
          name: varlogpods
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers

---
