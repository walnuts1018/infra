# Default values for dex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas (pods) to launch.
replicaCount: 1

image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/dexidp/dex
  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent
  # -- Image tag override for the default value (chart appVersion).
  tag: ""

https:
  # -- Enable the HTTPS endpoint.
  enabled: false

# -- Application configuration.
# See the [official documentation](https://dexidp.io/docs/).
config:
  # Set it to a valid URL
  issuer: http://auth.walnuts.ml

  # See https://dexidp.io/docs/storage/ for more options
  storage:
    type: memory

  # Enable at least one connector
  # See https://dexidp.io/docs/connectors/ for more options
  enablePasswordDB: true

service:
  # -- Annotations to be added to the service.
  annotations: {}
  # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  ports:
    http:
      # -- HTTP service port
      port: 5556
    https:
      # -- HTTPS service port
      port: 5554
    grpc:
      # -- gRPC service port
      port: 5557

ingress:
  # -- Enable [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/).
  enabled: true

  # -- Ingress [class name](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class).
  className: "nginx"

  # -- Annotations to be added to the ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Ingress host configuration.
  # @default -- See [values.yaml](values.yaml).
  hosts:
    - host: auth.walnuts.ml
      paths:
        - path: /
          pathType: ImplementationSpecific

  # -- Ingress TLS configuration.
  # @default -- See [values.yaml](values.yaml).
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceMonitor:
  # -- Enable Prometheus ServiceMonitor.
  # See the [documentation](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/design.md#servicemonitor) and the [API reference](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitor) for details.
  enabled: false

  # -- Namespace where the ServiceMonitor resource should be deployed.
  # @default -- Release namespace.
  namespace: ""

  # -- (duration) Prometheus scrape interval.
  interval:

  # -- (duration) Prometheus scrape timeout.
  scrapeTimeout:

  # -- Labels to be added to the ServiceMonitor.
  labels: {}

# -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources) for details.
# @default -- No requests or limits.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Autoscaling configuration (see [values.yaml](values.yaml) for details).
# @default -- Disabled by default.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
