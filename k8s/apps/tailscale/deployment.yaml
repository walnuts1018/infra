apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale
  labels:
    app: tailscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[{"name": "tailscale-bridge", "ips": ["192.168.0.24/24"]}]'
      labels:
        app: tailscale
    spec:
      serviceAccountName: "tailscale"
      containers:
        - name: tailscale
          imagePullPolicy: IfNotPresent
          image: ghcr.io/tailscale/tailscale:v1.62.1 # {"$imagepolicy": "network-exporter:tailscale"}
          env:
            # Store the state in a k8s secret
            - name: TS_KUBE_SECRET
              value: "tailscale"
            - name: TS_USERSPACE
              value: "true"
            - name: TS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth1
                  key: TS_AUTH_KEY
                  optional: true
            - name: TS_ROUTES
              value: "192.168.0.2/31,192.168.0.4/30,192.168.0.8/29,192.168.0.16/28,192.168.0.32/27,192.168.0.64/26,192.168.0.128/25,192.168.120.0/24"
            - name: TS_EXTRA_ARGS
              value: "--advertise-tags=tag:localserver --snat-subnet-routes=false --accept-routes"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          resources:
            requests:
              cpu: "20m"
              memory: "20Mi"
            limits:
              cpu: "100m"
              memory: "80Mi"
