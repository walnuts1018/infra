---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: repo
spec:
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: release
spec:
  chart:
    spec:
      chart: prometheus
      version: 20.0.2
  values:
    server:
      persistentVolume:
        size: 40Gi
        existingClaim: "prometheus-pvc"

      ingress:
        ## If true, Prometheus server Ingress will be created
        ##
        enabled: false

        # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
        # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
        ingressClassName: nginx

        ## Prometheus server Ingress annotations
        ##
        annotations: {}
        #   kubernetes.io/ingress.class: nginx
        #   kubernetes.io/tls-acme: 'true'

        ## Prometheus server Ingress additional labels
        ##
        extraLabels: {}

        ## Prometheus server Ingress hostnames with optional path
        ## Must be provided if Ingress is enabled
        ##
        hosts:
          - prometheus.walnuts.ml
        #   - domain.com/prometheus

        path: /

        # pathType is only for k8s >= 1.18
        pathType: Prefix

        ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
        extraPaths: []
        # - path: /*
        #   backend:
        #     serviceName: ssl-redirect
        #     servicePort: use-annotation

        ## Prometheus server Ingress TLS configuration
        ## Secrets must be manually created in the namespace
        ##
        tls: []
        #   - secretName: prometheus-server-tls
        #     hosts:
        #       - prometheus.domain.com
      service:
        type: LoadBalancer

      resources: {}
        # limits:
        #   cpu: 500m
        #   memory: 512Mi
        # requests:
        #   cpu: 500m
        #   memory: 512Mi
    
    prometheus-node-exporter:
      tolerations: 
        - key: "remote-node"
          operator: "Exists"
          
    # adds additional scrape configs to prometheus.yml
    # must be a string so you have to add a | after extraScrapeConfigs:
    # example adds prometheus-blackbox-exporter scrape config
    extraScrapeConfigs: |
      - job_name: 'node'
        #metrics_path: /probe
        #params:
        #  module: [http_2xx]
        static_configs:
          - targets:
            - 192.168.0.11:9100
        #relabel_configs:
        #  - source_labels: [__address__]
        #    target_label: __param_target
        #  - source_labels: [__param_target]
        #    target_label: instance
        #  - target_label: __address__
        #    replacement: prometheus-blackbox-exporter:9115