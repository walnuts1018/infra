apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: longhorn-oauth2-proxy-3be89d
spec:
  data:
    - remoteRef:
        key: longhorn-oauth2-proxy
        property: client-id
      secretKey: client-id
    - remoteRef:
        key: longhorn-oauth2-proxy
        property: client-secret
      secretKey: client-secret
    - remoteRef:
        key: longhorn-oauth2-proxy
        property: cookie-secret
      secretKey: cookie-secret
    - remoteRef:
        key: redis
        property: password
      secretKey: redis-password
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: longhorn-oauth2-proxy-3be89d
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn-oauth2-proxy-helm
  namespace: argocd
spec:
  destination:
    namespace: longhorn-system
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: oauth2-proxy
    helm:
      releaseName: longhorn-oauth2-proxy
      valuesObject:
        config:
          configFile: |-
            email_domains = [ "*" ]
            upstreams = [ "http://longhorn-frontend.longhorn-system.svc.cluster.local/#/dashboard" ]
            pass_access_token = true
            user_id_claim = "sub"
            oidc_groups_claim="my:zitadel:grants"
            allowed_groups = ["237477822715658605:longhorn-admin"]
          existingSecret: longhorn-oauth2-proxy-3be89d
        extraArgs:
          code-challenge-method: S256
          oidc-issuer-url: https://auth.walnuts.dev
          provider: oidc
          redirect-url: https://longhorn.walnuts.dev/oauth2/callback
          skip-provider-button: true
        ingress:
          className: cilium
          enabled: true
          hosts:
            - longhorn.walnuts.dev
          path: /
          pathType: Prefix
        metrics:
          enabled: true
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 5Mi
        sessionStorage:
          redis:
            clientType: sentinel
            existingSecret: longhorn-oauth2-proxy-3be89d
            passwordKey: redis-password
            sentinel:
              connectionUrls: redis://longhorn-oauth2-proxy-redis:6379,redis://longhorn-oauth2-proxy-redis-sentinel:26379
              existingSecret: longhorn-oauth2-proxy-3be89d
              masterName: mymaster
              passwordKey: redis-password
          type: redis
        tolerations:
          - key: node.walnuts.dev/low-performance
            operator: Exists
    repoURL: https://oauth2-proxy.github.io/manifests
    targetRevision: 8.3.2
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - FailOnSharedResource=true
---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisReplication
metadata:
  labels:
    app: longhorn-oauth2-proxy-redis
    app.kubernetes.io/name: longhorn-oauth2-proxy-redis
  name: longhorn-oauth2-proxy-redis
spec:
  clusterSize: 2
  kubernetesConfig:
    image: quay.io/opstree/redis:v7.2.7
    imagePullPolicy: IfNotPresent
    redisSecret:
      key: redis-password
      name: longhorn-oauth2-proxy-3be89d
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 4m
        memory: 4Mi
  nodeSelector:
    kubernetes.io/arch: amd64
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisSentinel
metadata:
  labels:
    app: longhorn-oauth2-proxy-redis
    app.kubernetes.io/name: longhorn-oauth2-proxy-redis
  name: longhorn-oauth2-proxy-redis
spec:
  clusterSize: 3
  kubernetesConfig:
    image: quay.io/opstree/redis-sentinel:v7.2.9
    imagePullPolicy: IfNotPresent
    redisSecret:
      key: redis-password
      name: longhorn-oauth2-proxy-3be89d
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 4m
        memory: 4Mi
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
  redisSentinelConfig:
    downAfterMilliseconds: "30000"
    failoverTimeout: "180000"
    masterGroupName: mymaster
    parallelSyncs: "1"
    quorum: "2"
    redisPort: "6379"
    redisReplicationName: longhorn-oauth2-proxy-redis
