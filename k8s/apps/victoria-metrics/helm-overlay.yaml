---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: repo
spec:
  url: https://victoriametrics.github.io/helm-charts/
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: release
spec:
  chart:
    spec:
      chart: victoria-metrics-single
      version: 0.9.4
  values:
    server:
      fullnameOverride: "victoria-metrics-single-server"
      persistentVolume:
        existingClaim: "victoria-metrics-pvc"

      #resources:
        # limits:
        #   cpu: 500m
        #   memory: 512Mi
        # requests:
        #   cpu: 500m
        #   memory: 512Mi

      scrape:
        enabled: true
        config:
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: victoriametrics
              static_configs:
                - targets: [ "localhost:8428" ]
            - job_name: "kubernetes-apiservers"
              kubernetes_sd_configs:
                - role: endpoints
              # Default to scraping over https. If required, just disable this or change to
              # `http`.
              scheme: https
              # This TLS & bearer token file config is used to connect to the actual scrape
              # endpoints for cluster components. This is separate to discovery auth
              # configuration because discovery & scraping are two separate concerns in
              # Prometheus. The discovery auth config is automatic if Prometheus runs inside
              # the cluster. Otherwise, more config options have to be provided within the
              # <kubernetes_sd_config>.
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                # If your node certificates are self-signed or use a different CA to the
                # master CA, then disable certificate verification below. Note that
                # certificate verification is an integral part of a secure infrastructure
                # so this should only be disabled in a controlled environment. You can
                # disable certificate verification by uncommenting the line below.
                #
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              # Keep only the default/kubernetes service endpoints for the https port. This
              # will add targets for each API server which Kubernetes adds an endpoint to
              # the default/kubernetes service.
              relabel_configs:
                - source_labels:
                    [
                        __meta_kubernetes_namespace,
                        __meta_kubernetes_service_name,
                        __meta_kubernetes_endpoint_port_name,
                    ]
                  action: keep
                  regex: default;kubernetes;https
            - job_name: "kubernetes-nodes"
              # Default to scraping over https. If required, just disable this or change to
              # `http`.
              scheme: https
              # This TLS & bearer token file config is used to connect to the actual scrape
              # endpoints for cluster components. This is separate to discovery auth
              # configuration because discovery & scraping are two separate concerns in
              # Prometheus. The discovery auth config is automatic if Prometheus runs inside
              # the cluster. Otherwise, more config options have to be provided within the
              # <kubernetes_sd_config>.
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                # If your node certificates are self-signed or use a different CA to the
                # master CA, then disable certificate verification below. Note that
                # certificate verification is an integral part of a secure infrastructure
                # so this should only be disabled in a controlled environment. You can
                # disable certificate verification by uncommenting the line below.
                #
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - target_label: __address__
                  replacement: kubernetes.default.svc:443
                - source_labels: [ __meta_kubernetes_node_name ]
                  regex: (.+)
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/$1/proxy/metrics
            - job_name: "kubernetes-nodes-cadvisor"
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - target_label: __address__
                  replacement: kubernetes.default.svc:443
                - source_labels: [ __meta_kubernetes_node_name ]
                  regex: (.+)
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
            - job_name: "kubernetes-service-endpoints"
              scrape_interval: 5m
              scrape_timeout: 30s
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
                - action: drop
                  source_labels: [ __meta_kubernetes_pod_container_init ]
                  regex: true
                - action: keep_if_equal
                  source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
                - source_labels:
                    [ __meta_kubernetes_service_annotation_prometheus_io_scrape_slow ]
                  action: keep
                  regex: true
                - source_labels:
                    [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
                  action: replace
                  target_label: __scheme__
                  regex: (https?)
                - source_labels:
                    [ __meta_kubernetes_service_annotation_prometheus_io_path ]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [
                        __address__,
                        __meta_kubernetes_service_annotation_prometheus_io_port,
                    ]
                  action: replace
                  target_label: __address__
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                - action: labelmap
                  regex: __meta_kubernetes_service_label_(.+)
                - source_labels: [ __meta_kubernetes_namespace ]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [ __meta_kubernetes_service_name ]
                  action: replace
                  target_label: kubernetes_name
                - source_labels: [ __meta_kubernetes_pod_node_name ]
                  action: replace
                  target_label: kubernetes_node
            - job_name: "kubernetes-services"
              metrics_path: /probe
              params:
                module: [ http_2xx ]
              kubernetes_sd_configs:
                - role: service
              relabel_configs:
                - source_labels:
                    [ __meta_kubernetes_service_annotation_prometheus_io_probe ]
                  action: keep
                  regex: true
                - source_labels: [ __address__ ]
                  target_label: __param_target
                - target_label: __address__
                  replacement: blackbox
                - source_labels: [ __param_target ]
                  target_label: instance
                - action: labelmap
                  regex: __meta_kubernetes_service_label_(.+)
                - source_labels: [ __meta_kubernetes_namespace ]
                  target_label: kubernetes_namespace
                - source_labels: [ __meta_kubernetes_service_name ]
                  target_label: kubernetes_name
            - job_name: "kubernetes-pods"
              scrape_interval: 5m
              scrape_timeout: 30s
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - action: drop
                  source_labels: [ __meta_kubernetes_pod_container_init ]
                  regex: true
                - action: keep_if_equal
                  source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
                - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
                  action: keep
                  regex: true
                - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [ __meta_kubernetes_namespace ]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [ __meta_kubernetes_pod_name ]
                  action: replace
                  target_label: kubernetes_pod_name
            - job_name: 'node-exporter'
              static_configs:
                - targets:
                  - 192.168.0.11:9100
                  - node-exporter-release-prometheus-node-exporter.monitoring.svc.cluster.local:9100
