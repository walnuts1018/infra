deploymentMode: SimpleScalable
loki:
  structuredConfig:
    chunk_store_config:
      chunk_cache_config:
        memcached: null
        memcached_client: null
        redis:
          endpoint: "loki-redis-leader.loki.svc.cluster.local:6379,loki-redis-leader.loki.svc.cluster.local:6379"
          tls_enabled: false
          tls_insecure_skip_verify: true
          db: 0
          expiration: 3600
          timeout: 500ms
          pool_size: 10
          idle_timeout: 90s
          max_connection_age: 10m
    query_range:
      cache_results: true
      results_cache:
        cache:
          memcached: null
          memcached_client: null
          redis:
            endpoint: "loki-redis-leader.loki.svc.cluster.local:6379,loki-redis-leader.loki.svc.cluster.local:6379"
            tls_enabled: true
            tls_insecure_skip_verify: true
            db: 1
            expiration: 3600
            timeout: 500ms
            pool_size: 10
            idle_timeout: 90s
            max_connection_age: 10m
  auth_enabled: false
  commonConfig:
    replication_factor: 1
  storage:
    type: s3
    bucketNames:
      chunks: "loki-chunks"
      ruler: "loki-ruler"
      admin: "loki-admin"
    use_thanos_objstore: true
    object_store:
      type: s3
      s3:
        endpoint: "minio.minio.svc.cluster.local"
        region: ap-northeast-1
        storage_class: REDUCED_REDUNDANCY
        insecure: true
        http:
          tls_ca_path: /etc/ssl/certs/trust-bundle.pem
          insecure_skip_verify: true
        sts_endpoint: "https://sts.minio-operator.svc.cluster.local:4223/sts/minio"
        bucket_lookup_type: path
  storage_config:
    use_thanos_objstore: true
  server:
    # "error": "HTTP 500 \"Internal Server Error\": rpc error: code = ResourceExhausted desc = grpc: received message larger than max (4840865 vs. 4194304)"
    # https://grafana.com/docs/loki/latest/configure/
    grpc_server_max_recv_msg_size: 104857600
    grpc_server_max_send_msg_size: 104857600
  schemaConfig:
    configs:
    - from: '2024-01-01'
      store: tsdb
      index:
        prefix: loki_index_
        period: 24h
      object_store: s3
      schema: v13
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 4
  distributor:
    otlp_config:
      default_resource_attributes_as_index_labels:
      - service.name
      - k8s.cluster.name
      - k8s.namespace.name
      - k8s.container.name
      - k8s.deployment.name
      - k8s.statefulset.name
      - k8s.daemonset.name
      - k8s.cronjob.name
      - k8s.job.name

  limits_config:
    allow_structured_metadata: true
    retention_period: 336h
    ingestion_burst_size_mb: 100
    shard_streams:
      enabled: true
      desired_rate: 104857600 # 10MiB
    reject_old_samples: false

global:
  extraEnv:
  - name: AWS_WEB_IDENTITY_TOKEN_FILE
    value: /var/run/secrets/sts.min.io/serviceaccount/token
  - name: AWS_ROLE_ARN
    value: arn:aws:iam::dummy:role/loki-minio-role
  # - name: REDIS_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: loki
  #       key: redispassword
  extraVolumes:
  - name: minio-sts-token
    projected:
      sources:
      - serviceAccountToken:
          audience: sts.min.io
          expirationSeconds: 3600
          path: token
  - name: local-ca-bundle
    configMap:
      name: local-ca-bundle
  extraVolumeMounts:
  - name: minio-sts-token
    mountPath: /var/run/secrets/sts.min.io/serviceaccount
    readOnly: true
  - name: local-ca-bundle
    mountPath: /etc/ssl/certs/trust-bundle.pem
    subPath: trust-bundle.pem
    readOnly: true

write:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: null
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 400Mi
      cpu: 60m
    limits:
      memory: 1Gi
      cpu: 1
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  persistence:
    volumeClaimsEnabled: false
    dataVolumeParameters:
      emptyDir: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - write
          topologyKey: kubernetes.io/hostname

read:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: null
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 350Mi
      cpu: 30m
    limits:
      memory: 1Gi
      cpu: 1
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - read
          topologyKey: kubernetes.io/hostname

backend:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: null
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 196Mi
      cpu: 30m
    limits:
      memory: 1Gi
      cpu: 100m
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  persistence:
    volumeClaimsEnabled: false
    dataVolumeParameters:
      emptyDir: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - backend
          topologyKey: kubernetes.io/hostname

gateway:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: null
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 20Mi
      cpu: 5m
    limits:
      memory: 512Mi
      cpu: 100m
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - gateway
          topologyKey: kubernetes.io/hostname
  tolerations:
  - key: "node.walnuts.dev/low-performance"
    operator: "Exists"

lokiCanary:
  resources:
    requests:
      cpu: 1m
      memory: 5Mi
    limits:
      cpu: "1"
      memory: 1Gi

singleBinary:
  replicas: 0

sidecar:
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 5m
      memory: 100Mi
chunksCache:
  enabled: false
resultsCache:
  enabled: false
