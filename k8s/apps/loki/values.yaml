deploymentMode: SimpleScalable
loki:
  auth_enabled: false
  commonConfig:
    replication_factor: 1
  storage:
    type: s3
    bucketNames:
      chunks: "loki-chunks"
      ruler: "loki-ruler"
      admin: "loki-admin"
    s3:
      endpoint: "http://minio.minio.svc.cluster.local:9000"
      region: ap-northeast-1
      secretAccessKey: "${secretAccessKey}"
      accessKeyId: "${accessKeyId}"
      s3ForcePathStyle: true
      insecure: true
      http_config:
        insecure_skip_verify: true
  server:
    # "error": "HTTP 500 \"Internal Server Error\": rpc error: code = ResourceExhausted desc = grpc: received message larger than max (4840865 vs. 4194304)"
    # https://grafana.com/docs/loki/latest/configure/
    grpc_server_max_recv_msg_size: 104857600
    grpc_server_max_send_msg_size: 104857600
  schemaConfig:
    configs:
    - from: '2024-01-01'
      store: tsdb
      index:
        prefix: loki_index_
        period: 24h
      object_store: s3
      schema: v13
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 4
  limits_config:
    allow_structured_metadata: true
    retention_period: 336h
    ingestion_burst_size_mb: 100
    shard_streams:
      enabled: true
      desired_rate: 104857600 # 10MiB
    reject_old_samples: false
  config: |
    {{- if .Values.enterprise.enabled}}
    {{- tpl .Values.enterprise.config . }}
    {{- else }}
    auth_enabled: {{ .Values.loki.auth_enabled }}
    {{- end }}

    {{- with .Values.loki.server }}
    server:
      {{- toYaml . | nindent 2}}
    {{- end}}

    pattern_ingester:
      enabled: {{ .Values.loki.pattern_ingester.enabled }}

    memberlist:
    {{- if .Values.loki.memberlistConfig }}
      {{- toYaml .Values.loki.memberlistConfig | nindent 2 }}
    {{- else }}
    {{- if .Values.loki.extraMemberlistConfig}}
    {{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}
    {{- end }}
      join_members:
        - {{ include "loki.memberlist" . }}
        {{- with .Values.migrate.fromDistributed }}
        {{- if .enabled }}
        - {{ .memberlistService }}
        {{- end }}
        {{- end }}
    {{- end }}

    {{- with .Values.loki.ingester }}
    ingester:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- if .Values.loki.commonConfig}}
    common:
    {{- toYaml .Values.loki.commonConfig | nindent 2}}
      storage:
      {{- include "loki.commonStorageConfig" . | nindent 4}}
    {{- end}}

    {{- with .Values.loki.limits_config }}
    limits_config:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml

    {{- with .Values.chunksCache }}
    chunk_store_config:
      chunk_cache_config:
        default_validity: {{ .defaultValidity }}
        background:
          writeback_goroutines: {{ .writebackParallelism }}
          writeback_buffer: {{ .writebackBuffer }}
          writeback_size_limit: {{ .writebackSizeLimit }}
        redis:
          endpoint: "loki-redis"
          tls_enabled: false
          db: 0
    {{- end }}

    {{- if .Values.loki.schemaConfig }}
    schema_config:
    {{- toYaml .Values.loki.schemaConfig | nindent 2}}
    {{- end }}

    {{- if .Values.loki.useTestSchema }}
    schema_config:
    {{- toYaml .Values.loki.testSchemaConfig | nindent 2}}
    {{- end }}

    {{ include "loki.rulerConfig" . }}

    {{- if or .Values.tableManager.retention_deletes_enabled .Values.tableManager.retention_period }}
    table_manager:
      retention_deletes_enabled: {{ .Values.tableManager.retention_deletes_enabled }}
      retention_period: {{ .Values.tableManager.retention_period }}
    {{- end }}

    query_range:
      align_queries_with_step: true
      {{- with .Values.loki.query_range }}
      {{- tpl (. | toYaml) $ | nindent 2 }}
      {{- end }}
      {{- with .Values.resultsCache }}
      cache_results: true
      results_cache:
        cache:
          default_validity: {{ .defaultValidity }}
          background:
            writeback_goroutines: {{ .writebackParallelism }}
            writeback_buffer: {{ .writebackBuffer }}
            writeback_size_limit: {{ .writebackSizeLimit }}
          redis:
            endpoint: "loki-redis"
            tls_enabled: false
            db: 1
      {{- end }}

    {{- with .Values.loki.storage_config }}
    storage_config:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.query_scheduler }}
    query_scheduler:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.compactor }}
    compactor:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.analytics }}
    analytics:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.querier }}
    querier:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.index_gateway }}
    index_gateway:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.frontend }}
    frontend:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.frontend_worker }}
    frontend_worker:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.distributor }}
    distributor:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    tracing:
      enabled: {{ .Values.loki.tracing.enabled }}

    {{- with .Values.loki.bloom_build }}
    bloom_build:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

    {{- with .Values.loki.bloom_gateway }}
    bloom_gateway:
      {{- tpl (. | toYaml) $ | nindent 4 }}
    {{- end }}

write:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 300Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 1
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  persistence:
    volumeClaimsEnabled: false
    dataVolumeParameters:
      emptyDir: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - write
          topologyKey: kubernetes.io/hostname

read:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 160Mi
      cpu: 20m
    limits:
      memory: 1Gi
      cpu: 1
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - read
          topologyKey: kubernetes.io/hostname

backend:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 256Mi
      cpu: 15m
    limits:
      memory: 1Gi
      cpu: 100m
  extraArgs: [ "-config.expand-env=true" ]
  extraEnvFrom:
  - secretRef:
      name: loki
  persistence:
    volumeClaimsEnabled: false
    dataVolumeParameters:
      emptyDir: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - backend
          topologyKey: kubernetes.io/hostname

gateway:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  resources:
    requests:
      memory: 15Mi
      cpu: 2m
    limits:
      memory: 512Mi
      cpu: 10m
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - gateway
          topologyKey: kubernetes.io/hostname

singleBinary:
  replicas: 0

sidecar:
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 5m
      memory: 100Mi
chunksCache:
  enabled: false # Memcached Podをデプロイしない
resultsCache:
  enabled: false # Memcached Podをデプロイしない
