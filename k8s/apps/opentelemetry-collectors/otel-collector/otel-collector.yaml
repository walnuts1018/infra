apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: default
spec:
  config:
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: "serviceAccount"
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.cluster.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        pod_association:
          - sources: # First try to use the value of the resource attribute k8s.pod.ip
              - from: resource_attribute
                name: k8s.pod.ip
          - sources: # Then try to use the value of the resource attribute k8s.pod.uid
              - from: resource_attribute
                name: k8s.pod.uid
          - sources: # If neither of those work, use the request's connection to get the pod IP.
              - from: connection
    exporters:
      otlp/tempo:
        endpoint: tempo.monitoring.svc.cluster.local:4317
        tls:
          insecure: true
      otlphttp/openobserve:
        endpoint: https://openobserve.walnuts.dev/api/default/
        headers:
          Authorization: ${env:OPENOBSERVE_AUTHORIZATION}
      otlphttp/loki:
        endpoint: http://loki.monitoring.svc.cluster.local:3100/otlp/v1/logs
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/tempo, otlphttp/openobserve]
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlphttp/openobserve]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlphttp/loki, otlphttp/openobserve]
  env:
  - name: OPENOBSERVE_AUTHORIZATION
    valueFrom:
      secretKeyRef:
        name: openobserve-authorization
        key: authorization
