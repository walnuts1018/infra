apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: kubelet
spec:
  serviceAccount: otel-collector
  mode: daemonset
  config:
    receivers:
      kubeletstats:
        collection_interval: 10s
        auth_type: 'serviceAccount'
        endpoint: '${env:K8S_NODE_IP}:10250'
        insecure_skip_verify: true
        metric_groups:
        - node
        - pod
        - container
        metrics:
          container.cpu.utilization:
            enabled: false
          k8s.node.cpu.utilization:
            enabled: false
          k8s.pod.cpu.utilization:
            enabled: false
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: 'serviceAccount'
        filter:
          node_from_env_var: K8S_NODE_NAME
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.pod.name
          - k8s.pod.start_time
          - k8s.pod.uid
          - k8s.deployment.name
          - k8s.deployment.uid
          - k8s.node.name
          - k8s.cluster.uid
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.daemonset.name
          - k8s.daemonset.uid
          - k8s.statefulset.name
          - k8s.statefulset.uid
          - container.id
        pod_association: # How to associate the data to a pod (order matters)
        - sources: # First try to use the value of the resource attribute k8s.pod.ip
          - from: resource_attribute
            name: k8s.pod.ip
        - sources: # Then try to use the value of the resource attribute k8s.pod.uid
          - from: resource_attribute
            name: k8s.pod.uid
        - sources: # If neither of those work, use the request's connection to get the pod IP.
          - from: connection
    exporters:
      otlp/default:
        endpoint: default-collector.opentelemetry-collector.svc.cluster.local:4317
        tls:
          insecure: true
    service:
      pipelines:
        metrics:
          receivers: [kubeletstats]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/default]
  env:
  - name: K8S_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
