apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: k8s-deployment
spec:
  serviceAccount: otel-collector
  mode: deployment
  image: otel/opentelemetry-collector-k8s:0.109.0 # {"$imagepolicy": "opentelemetry-collector:opentelemetry-collector-k8s"}
  managementState: managed
  config:
    receivers:
      k8s_cluster:
        auth_type: serviceAccount
        node_conditions_to_report:
        - Ready
        - MemoryPressure
        allocatable_types_to_report:
        - cpu
        - memory
        resource_attributes:
          k8s.container.status.last_terminated_reason:
            enabled: true
          k8s.deployment.name:
            enabled: true
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: 'serviceAccount'
        extract:
          metadata:
          - k8s.cluster.uid
        pod_association: # How to associate the data to a pod (order matters)
        - sources: # First try to use the value of the resource attribute k8s.pod.ip
          - from: resource_attribute
            name: k8s.pod.ip
        - sources: # Then try to use the value of the resource attribute k8s.pod.uid
          - from: resource_attribute
            name: k8s.pod.uid
        - sources: # If neither of those work, use the request's connection to get the pod IP.
          - from: connection
    exporters:
      otlp/default:
        endpoint: default-collector.opentelemetry-collector.svc.cluster.local:4317
        tls:
          insecure: true
    service:
      pipelines:
        metrics:
          receivers: [k8s_cluster]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/default]
  env:
  - name: K8S_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
