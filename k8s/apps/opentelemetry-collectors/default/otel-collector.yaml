apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: default
spec:
  mode: deployment
  serviceAccount: otel-collector
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            max_recv_msg_size_mib: 100
          http: {}
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: 'serviceAccount'
        filter:
          node_from_env_var: K8S_NODE_NAME
        extract:
          metadata:
          - k8s.cluster.uid
        pod_association: # How to associate the data to a pod (order matters)
        - sources: # First try to use the value of the resource attribute k8s.pod.ip
          - from: resource_attribute
            name: k8s.pod.ip
        - sources: # Then try to use the value of the resource attribute k8s.pod.uid
          - from: resource_attribute
            name: k8s.pod.uid
        - sources: # If neither of those work, use the request's connection to get the pod IP.
          - from: connection
    exporters:
      otlp/tempo:
        endpoint: tempo.monitoring.svc.cluster.local:4317
        tls:
          insecure: true
      otlp/loki-exporter:
        endpoint: loki-exporter-collector.opentelemetry-collector.svc.cluster.local:4317
        tls:
          insecure: true
      otlp/prometheus-exporter:
        endpoint: prometheus-exporter-collector.opentelemetry-collector.svc.cluster.local:4317
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/tempo]
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/prometheus-exporter]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlp/loki-exporter]
  env:
  - name: K8S_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
