name: k8s CI

on:
  pull_request:
    branches: [main]
    paths:
      - "k8s/**"
      - ".github/workflows/k8s.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - run: "mkdir -p ./k8s/tmp/cluster-kustomize"
        shell: bash

      - run: 'echo -en "apiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n" > ./k8s/tmp/cluster-kustomize/kustomization.yaml'
        shell: bash

      - run: 'ls ./k8s/apps/ | while read line; do   echo "  - ../../apps/$line" >> ./k8s/tmp/cluster-kustomize/kustomization.yaml  ; done'
        shell: bash

      - uses: azure/k8s-bake@v2
        with:
          renderEngine: "kustomize"
          kustomizationPath: "./k8s/tmp/cluster-kustomize/"
          kubectl-version: "latest"
        id: base_bake

      - run: "mv ${{ steps.base_bake.outputs.manifestsBundle }} /tmp/manifests-base.yaml"

      - uses: actions/checkout@v4

      - run: "ls ./k8s/"
        shell: bash

      - run: "mkdir -p ./k8s/tmp/cluster-kustomize"
        shell: bash

      - run: 'echo -en "apiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n" > ./k8s/tmp/cluster-kustomize/kustomization.yaml'
        shell: bash

      - run: 'ls ./k8s/apps/ | while read line; do   echo "  - ../../apps/$line" >> ./k8s/tmp/cluster-kustomize/kustomization.yaml  ; done'
        shell: bash

      - uses: azure/k8s-bake@v2
        with:
          renderEngine: "kustomize"
          kustomizationPath: ./k8s/tmp/cluster-kustomize/
          kubectl-version: "latest"
        id: base_changed

      - run: "mv ${{ steps.base_changed.outputs.manifestsBundle }} /tmp/manifests-head.yaml"

      - name: Upload file status_job02.txt as an artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: manifests
          path: |
            /tmp/manifests-base.yaml
            /tmp/manifests-head.yaml

  diff:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: manifests

      - name: Build markdown comment with manifest diff
        run: |
          cat <<EOF > /tmp/comment.md
          ## Manifest diff

          <details>

          \`\`\`diff
          $(diff -u manifests-base.yaml manifests-head.yaml)
          \`\`\`

          </details>
          EOF
      - name: Comment manifest diff to GitHub commit
        run: |
          cat /tmp/comment.md | jq -Rs '{ "body": . }' | curl --fail \
            -X POST -H 'Accept: application/vnd.github.v3+json' \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/comments \
            -d @-

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: manifests

      - name: Lint manifest with kubeconform
        uses: docker://ghcr.io/yannh/kubeconform:latest
        with:
          args: "-ignore-missing-schemas -strict -summary manifests-head.yaml"
