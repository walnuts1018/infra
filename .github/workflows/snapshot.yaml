name: Snapshot Auto Generation
on:
  push:
    branches:
      - "**"
      - "!snapshot"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: generate_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Set env
        run: |
          echo "GITHUB_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV

      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: switch to snapshot branch
        run: git switch -c snapshot

      - name: setup-go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "scripts/infrautil/go.mod"
          cache-dependency-path: "scripts/infrautil/go.sum"

      - name: make snapshot
        run: |
          make snapshot

      - name: Upload folder
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          if-no-files-found: error
          name: snapshots
          path: |
            k8s/snapshots

      - name: mv snapshot
        if: ${{ github.ref_name == 'main' }}
        run: |
          rm -rf k8s/apps
          mv k8s/snapshots/apps k8s/apps
          mv k8s/snapshots/helm k8s/helm

      - name: push
        if: ${{ github.ref_name == 'main' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "snapshot"
          git push origin snapshot --force

  scan:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    needs: snapshot
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: snapshot

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        with:
          scan-type: "config"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          trivy-config: trivy.yaml

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: "trivy-results.sarif"
  lint:
    runs-on: ubuntu-latest
    needs: snapshot
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: aquaproj/aqua-installer@ea518c135a02fc11ff8024364510c181a5c6b342 # v4.0.3
        with:
          aqua_version: v2.55.0

      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: snapshots
          path: ./k8s/snapshots/

      - name: Lint manifest with kubeconform
        run: |
          kubeconform -ignore-missing-schemas -strict -summary ./k8s/snapshots/apps

  # auto merge用
  # auto megeはskipもsuccessとみなす
  status-check:
    runs-on: ubuntu-latest
    needs: [lint]
    if: failure()
    steps:
      - run: exit 1
